---
- name: create | install shell
  become: true
  apt: pkg={{user_shell}} state=present

- name: create | find shell path
  command: which {{user_shell}}
  register: shell_path_cmd
  changed_when: false

- name: create | set user_shell_path fact
  set_fact: user_shell_path={{shell_path_cmd.stdout}}

- name: create | configure user
  become: true
  user: name={{user_name}} state=present shell={{user_shell_path}}
  register: user_data

- name: create | set user_home fact
  set_fact: user_home={{user_data.home}}

- name: create | set user_profile fact
  set_fact: user_profile={{shell_map[user_shell]}}
  vars:
    shell_map:
      bash: "{{user_home}}/.bashrc"
      zsh: "{{user_home}}/.zshrc"
  
- name: create | enable passwordless sudo
  become: true
  lineinfile: path={{path}} line={{line}} state=present mode=0440 create=yes validate="visudo -cf %s"
  vars:
    path: /etc/sudoers.d/{{user_name}}
    line: '{{user_name}} ALL=(ALL) NOPASSWD: ALL'

- name: create | create source directory
  become: true
  become_user: "{{user_name}}"
  file: path={{path}} state=directory recurse=true
  vars:
    path: "{{user_home}}/source"

- name: create | add src alias to profile
  become: true
  become_user: "{{user_name}}"
  blockinfile: dest={{dest}} block={{block}} marker={{marker}} create=true
  vars:
    dest: "{{user_profile}}"
    block: "{{lookup('template', 'templates/alias_src.j2')}}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK for {{role_name}} templates/alias_src.j2"

- name: create | add python commands to profile
  become: true
  become_user: "{{user_name}}"
  blockinfile: dest={{user_profile}} block={{block}} marker={{marker}} create=true
  vars:
    block: "{{lookup('template', item)}}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK for {{role_name}} {{item}}"
    venv_home: "{{user_home}}/.virtualenvs"
  loop:
  - templates/cmd_mkpy.j2
  - templates/cmd_mkpyve.j2
  - templates/cmd_rmpyve.j2
  - templates/cmd_lspyve.j2
  - templates/cmd_usepyve.j2
