mkpyve() {
    venv_home="{{venv_home}}"

    usage() {
        echo "mkpyve <version> <name>"
    }

    # validate args
    version="$1"
    name="$2"
    if [ "$version" = "" ]; then
        1>&2 echo "error: version unset"
        usage
        return
    fi
    if [ "$name" = "" ]; then
        1>&2 echo "error: name unset"
        usage
        return
    fi

    # ensure asdf is installed
    command -v asdf 2>&1 > /dev/null 
    has_asdf="$?"
    if [ ! "$has_asdf" = "0" ]; then
        1>&2 echo "error: command not found: asdf"
        return
    fi

    # ensure python plugin installed
    has_plugin="$(asdf plugin list | grep "^python$")"
    if [ "$has_plugin" = "" ]; then
        1>&2 echo "error: asdf plugin not found: python"
        return
    fi

    # create base python
    mkpy "$version"

    # find base python
    python_home="$(asdf where python $version)"
    success="$?"
    if [ ! "$success" = "0" ]; then
        1>&2 echo "error: python not found: $version"
        return
    fi
    
    # make venv home directory
    mkdir -p "$venv_home" > /dev/null

    # make venv
    venv_dir="$venv_home/$name"
    "$python_home/bin/python" -m venv "$venv_dir"
    success="$?"
    if [ ! "$success" = "0" ]; then
        1>&2 echo "error: venv creation failed"
        rm -rf "$venv_dir"
        return
    fi

    # activate venv
    usepyve "$name"
}
