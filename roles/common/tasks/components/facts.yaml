- name: set misc data
  ansible.builtin.set_fact:
    os_family: "{{ansible_facts['os_family'] | lower}}"
    system: "{{ansible_system | lower}}"
    architecture: "{{ansible_architecture | lower}}"
    distribution: "{{ansible_distribution | lower}}"
    release: "{{ansible_distribution_release | lower}}"
    username: "{{ansible_user_id}}"
    vm: false

- name: coerce aarch64 to arm64
  when: architecture == 'aarch64'
  ansible.builtin.set_fact:
    architecture: arm64

- name: coerce x86_64 to amd64
  when: architecture == 'x86_64'
  ansible.builtin.set_fact:
    architecture: amd64

- name: set misc data
  ansible.builtin.set_fact:
    linux: "{{system == 'linux'}}"
    darwin: "{{system == 'darwin'}}"
    debian: "{{os_family == 'debian'}}"
    archlinux: "{{os_family == 'archlinux'}}"
    ubuntu: "{{distribution == 'ubuntu'}}"
    amd64: "{{architecture == 'amd64'}}"
    arm64: "{{architecture == 'arm64'}}"

- name: set user
  ansible.builtin.user:
    name: "{{username}}"
  register: user

- name: read system product name
  ansible.builtin.slurp:
    src: /sys/devices/virtual/dmi/id/product_name
  register: product_name

- name: set vm flag
  when: "'vmware' in (product_name['content'] | b64decode | lower)"
  ansible.builtin.set_fact:
    vm: true
