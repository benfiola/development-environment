- tags: [minimal]
  block:
    - when: not (debian or archlinux or darwin)
      block:
        - name: unimplemented
          empty: {}
  
    - when: debian
      block:
        - name: apt install dotfiles dependencies
          become: true
          ansible.builtin.apt:
            package:
              - git
              - rsync

    - when: archlinux
      block:
        - name: pacman install dotfiles dependencies
          become: true
          community.general.pacman:
            name:
              - git
              - rsync

    - when: debian or archlinux or darwin
      block:
        - name: check existing dotfiles directory
          ansible.builtin.stat:
            path: "{{user.home}}/.dotfiles"
          register: dotfiles_stat
        
        - name: remove existing dotfiles path
          when: exists and ((symlink_playbook and not is_symlink) or (not symlink_playbook and is_symlink))
          vars:
            exists: "{{dotfiles_stat.stat.exists}}"
            is_symlink: "{{dotfiles_stat.stat.islnk}}"
          ansible.builtin.file:
            path: "{{user.home}}/.dotfiles"
            state: absent
        
        - name: copy playbook to dotfiles directory
          when: not symlink_playbook
          ansible.builtin.synchronize:
            src: "{{playbook_dir}}/"
            dest: "{{user.home}}/.dotfiles"

        - name: symlink playbook to dotfiles directory
          when: symlink_playbook
          ansible.builtin.file:
            src: "{{playbook_dir}}"
            dest: "{{user.home}}/.dotfiles"
            state: link
        
        - name: set dotfiles path fact
          ansible.builtin.set_fact:
            dotfiles_path: "{{user.home}}/.dotfiles"
...
